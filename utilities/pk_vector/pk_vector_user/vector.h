/*=====================================================================================*/
/**
 * vector.h
 * author : puch
 * date : Oct 22 2015
 *
 * description : Any comments
 *
 */
/*=====================================================================================*/
#ifndef VECTOR_H_
#define VECTOR_H_
/*=====================================================================================*
 * Project Includes
 *=====================================================================================*/
#include "iterable.h"
/*=====================================================================================* 
 * Standard Includes
 *=====================================================================================*/

/*=====================================================================================* 
 * Exported Define Macros
 *=====================================================================================*/
#ifdef __cplusplus
extern "C" {
#endif

#define VECTOR_CTOR(PARAM) ,PARAM(size_t const, elem_size),PARAM(void * , (*alloc)(Iterable))
/*=====================================================================================* 
 * Exported Type Declarations
 *=====================================================================================*/
Declare_Class_Inherits(
      Vector, Iterable,
      VECTOR_CTOR,
      void * data;
      uint32_t heap;
      size_t alloc_space;
      void * (*alloc)(Iterable);
      ,
      );
/*=====================================================================================* 
 * Exported Object Declarations
 *=====================================================================================*/

/*=====================================================================================* 
 * Exported Function Prototypes
 *=====================================================================================*/
uint32_t Vector_size(Vector obj);
bool_t Vector_is_empty(Vector obj);
struct Iterator_T * Vector_create_it(Vector obj);
struct Iterator_T * Vector_at(Vector obj, uint32_t i);
struct Iterator_T * Vector_begin(Vector obj);
struct Iterator_T * Vector_end(Vector obj);

void Vector_push(Vector obj, void const * pushed_data);
void * Vector_pop(Vector obj);
void * Vector_peek(Vector obj);
/*=====================================================================================* 
 * Exported Function Like Macros
 *=====================================================================================*/
#ifdef __cplusplus
}
#endif
/*=====================================================================================* 
 * vector.h
 *=====================================================================================*
 * Log History
 *
 *=====================================================================================*/
#endif /*VECTOR_H_*/
